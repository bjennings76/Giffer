using System;
using System.Collections.Generic;
using System.Linq;

namespace Giffer
{
    public static class RandomCycle
    {
        private static readonly Random _random = new Random();
        private static int _prime;
        private static readonly int[] _primes = {4260647, 4260649, 4260677, 4260689, 4260703, 4260713, 4260719, 4260721, 4260743, 4260749, 4260757, 4260793, 4260799, 4260821, 4260833, 4260859, 4260877, 4260899, 4260901, 4260917, 4260967, 4261009, 4261013, 4261021, 4261027, 4261051, 4261079, 4261087, 4261093, 4261109, 4261129, 4261139, 4261151, 4261177, 4261183, 4261189, 4261193, 4261199, 4261211, 4261219, 4261223, 4261249, 4261261, 4261273, 4261319, 4261321, 4261331, 4261333, 4261351, 4261357, 4261363, 4261381, 4261391, 4261421, 4261423, 4261483, 4261519, 4261541, 4261547, 4261553, 4261583, 4261589, 4261597, 4261613, 4261627, 4261651, 4261661, 4261709, 4261711, 4261723, 4261727, 4261759, 4261793, 4261837, 4261841, 4261843, 4261853, 4261867, 4261903, 4261931, 4261949, 4261963, 4261979, 4261981, 4261987, 4261997, 4262003, 4262029, 4262033, 4262047, 4262051, 4262077, 4262119, 4262143, 4262147, 4262149, 4262161, 4262171, 4262173, 4262177, 4262179, 4262183, 4262191, 4262197, 4262233, 4262239, 4262249, 4262261, 4262267, 4262281, 4262303, 4262311, 4262329, 4262351, 4262353, 4262387, 4262389, 4262399, 4262417, 4262431, 4262459, 4262491, 4262509, 4262513, 4262549, 4262551, 4262561, 4262581, 4262611, 4262617, 4262639, 4262653, 4262677, 4262683, 4262693, 4262701, 4262743, 4262749, 4262777, 4262803, 4262813, 4262831, 4262849, 4262851, 4262873, 4262879, 4262887, 4262899, 4262933, 4262941, 4262969, 4262983, 4263001, 4263013, 4263037, 4263047, 4263059, 4263079, 4263113, 4263121, 4263131, 4263137, 4263157, 4263167, 4263169, 4263197, 4263199, 4263223, 4263227, 4263253, 4263283, 4263289, 4263299, 4263313, 4263331, 4263341, 4263359, 4263361, 4263397, 4263403, 4263421, 4263431, 4263433, 4263449, 4263491, 4263509, 4263527, 4263529, 4263541, 4263557, 4263559, 4263569, 4263587, 4263593, 4263607, 4263641, 4263659, 4263683, 4263689, 4263697, 4263703, 4263731, 4263739, 4263761, 4263773, 4263781, 4263803, 4263811, 4263823, 4263827, 4263859, 4263863, 4263869, 4263881, 4263911, 4263913, 4263929, 4263937, 4263953, 4263977, 4263979, 4264021, 4264027, 4264033, 4264049, 4264063, 4264067, 4264069, 4264109, 4264157, 4264171, 4264187, 4264193, 4264199, 4264201, 4264207, 4264219, 4264237, 4264259, 4264261, 4264289, 4264307, 4264313, 4264319, 4264333, 4264339, 4264373, 4264409, 4264471, 4264487, 4264511, 4264517, 4264543, 4264549, 4264553, 4264567, 4264597, 4264609, 4264619, 4264621, 4264627, 4264633, 4264651, 4264661, 4264669, 4264681, 4264691, 4264709, 4264781, 4264811, 4264817, 4264823, 4264829, 4264831, 4264837, 4264847, 4264849, 4264859, 4264877, 4264889, 4264901, 4264919, 4264951, 4264957, 4264961, 4264979, 4264991, 4264999, 4265003, 4265017, 4265021, 4265029, 4265047, 4265057, 4265077, 4265081, 4265083, 4265087, 4265089, 4265099, 4265119, 4265123, 4265137, 4265141, 4265159, 4265161, 4265179, 4265207, 4265227, 4265231, 4265263, 4265267, 4265273, 4265293, 4265311, 4265357, 4265363, 4265369, 4265377, 4265399, 4265413, 4265431, 4265441, 4265473, 4265477, 4265489, 4265537, 4265561, 4265567, 4265593, 4265617, 4265629, 4265663, 4265683, 4265687, 4265699, 4265711, 4265713, 4265717, 4265719, 4265731, 4265783, 4265797, 4265801, 4265831, 4265837, 4265843, 4265881, 4265887, 4265897, 4265903, 4265939, 4265969, 4265977, 4265981, 4265999, 4266029, 4266061, 4266149, 4266169, 4266179, 4266181, 4266217, 4266221, 4266253, 4266257, 4266263, 4266271, 4266287, 4266289, 4266307, 4266329, 4266343, 4266347, 4266377, 4266391, 4266397, 4266443, 4266481, 4266487, 4266497, 4266511, 4266517, 4266527, 4266529, 4266547, 4266551, 4266557, 4266593, 4266599, 4266601, 4266611, 4266617, 4266629, 4266637, 4266667, 4266673, 4266679, 4266709, 4266721, 4266727, 4266733, 4266797, 4266817, 4266827, 4266833, 4266841, 4266853, 4266859, 4266893, 4266907, 4266943, 4266961, 4266967, 4266991, 4267007, 4267033, 4267079, 4267091, 4267111, 4267117, 4267141, 4267169, 4267183, 4267199, 4267201, 4267261, 4267301, 4267303, 4267337, 4267339, 4267349, 4267369, 4267399, 4267409, 4267421, 4267427, 4267441, 4267447, 4267451, 4267463, 4267517, 4267531, 4267537, 4267541, 4267573, 4267579, 4267603, 4267619, 4267631, 4267651, 4267657, 4267661, 4267667, 4267693, 4267721, 4267729, 4267759, 4267763, 4267787, 4267819, 4267831, 4267841, 4267847, 4267859, 4267889, 4267891, 4267927, 4267937, 4267973, 4267981, 4268009, 4268021, 4268029, 4268039, 4268063, 4268107, 4268149, 4268153, 4268167, 4268171, 4268177, 4268183, 4268189, 4268197, 4268213, 4268219, 4268233, 4268261, 4268267, 4268269, 4268279, 4268287, 4268311, 4268321, 4268323, 4268333, 4268339, 4268401, 4268413, 4268437, 4268471, 4268477, 4268491, 4268507, 4268531, 4268533, 4268543, 4268557, 4268569, 4268573, 4268599, 4268603, 4268609, 4268611, 4268617, 4268623, 4268647, 4268651, 4268689, 4268699, 4268729, 4268743, 4268791, 4268809, 4268813, 4268843, 4268857, 4268861, 4268867, 4268881, 4268893, 4268899, 4268909, 4268933, 4268951, 4268981, 4268993, 4269019, 4269029, 4269037, 4269047, 4269049, 4269071, 4269077, 4269101, 4269127, 4269137, 4269149, 4269157, 4269179, 4269211, 4269217, 4269263, 4269277, 4269313, 4269347, 4269379, 4269383, 4269403, 4269439, 4269469, 4269491, 4269497, 4269511, 4269523, 4269539, 4269563, 4269571, 4269589, 4269593, 4269607, 4269619, 4269631, 4269637, 4269647, 4269667, 4269677, 4269679, 4269691, 4269721, 4269767, 4269779, 4269787, 4269803, 4269821, 4269823, 4269833, 4269841, 4269877, 4269883, 4269887, 4269899, 4269901, 4269913, 4269919, 4269949, 4269961, 4269983, 4270031, 4270039, 4270069, 4270073, 4270081, 4270087, 4270093, 4270099, 4270103, 4270139, 4270169, 4270177, 4270181, 4270199, 4270223, 4270229, 4270261, 4270283, 4270289, 4270297, 4270303, 4270319, 4270327, 4270363, 4270391, 4270397, 4270411, 4270447, 4270463, 4270471, 4270499, 4270501, 4270507, 4270517, 4270523, 4270531, 4270537, 4270543, 4270559, 4270589, 4270603, 4270633, 4270639, 4270667, 4270697, 4270699, 4270703, 4270727, 4270741, 4270751, 4270789, 4270807, 4270811, 4270817, 4270829, 4270837, 4270841, 4270853, 4270879, 4270891, 4270907, 4270909, 4270921, 4270943, 4270949, 4270957, 4270969, 4270997, 4271009, 4271017, 4271027, 4271039, 4271041, 4271081, 4271117, 4271129, 4271153, 4271161, 4271167, 4271171, 4271173, 4271177, 4271203, 4271213, 4271221, 4271227, 4271237, 4271251, 4271269, 4271279, 4271297, 4271299, 4271321, 4271327, 4271347, 4271357, 4271363, 4271387, 4271389, 4271401, 4271413, 4271417, 4271441, 4271453, 4271461, 4271467, 4271479, 4271489, 4271557, 4271563, 4271567, 4271569, 4271581, 4271587, 4271591, 4271611, 4271621, 4271623, 4271627, 4271711, 4271717, 4271731, 4271737, 4271753, 4271759, 4271791, 4271801, 4271803, 4271809, 4271833, 4271843, 4271851, 4271873, 4271881, 4271923, 4271929, 4271963, 4272001, 4272029, 4272031, 4272053, 4272091, 4272113, 4272119, 4272139, 4272157, 4272161, 4272167, 4272173, 4272187, 4272211, 4272221, 4272223, 4272239, 4272263, 4272269, 4272311, 4272341, 4272343, 4272349, 4272377, 4272409, 4272413, 4272419, 4272449, 4272461, 4272469, 4272481, 4272497, 4272529, 4272533, 4272553, 4272563, 4272571, 4272589, 4272601, 4272613, 4272659, 4272683, 4272703, 4272707, 4272727, 4272731, 4272743, 4272767, 4272769, 4272799, 4272803, 4272809, 4272811, 4272833, 4272841, 4272859, 4272881, 4272883, 4272901, 4272907, 4272941, 4272943, 4272949, 4272959, 4272971, 4272973, 4273033, 4273037, 4273051, 4273057, 4273067, 4273079, 4273091, 4273097, 4273117, 4273123, 4273151, 4273153, 4273163, 4273183, 4273187, 4273207, 4273249, 4273253, 4273261, 4273289, 4273301, 4273343, 4273361, 4273387, 4273391, 4273393, 4273397, 4273417, 4273427, 4273439, 4273459, 4273481, 4273483, 4273519, 4273523, 4273543, 4273589, 4273597, 4273601, 4273609, 4273627, 4273631, 4273667, 4273669, 4273679, 4273693, 4273739, 4273741, 4273769, 4273793, 4273807, 4273823, 4273831, 4273849, 4273853, 4273873, 4273889, 4273891, 4273903, 4273909, 4273937, 4273949, 4273957, 4273961, 4273967, 4274003, 4274009, 4274027, 4274029, 4274041, 4274051, 4274057, 4274059, 4274093, 4274099, 4274147, 4274161, 4274173, 4274177, 4274189, 4274201, 4274213, 4274233, 4274239, 4274261, 4274273};
        private static Dictionary<int, int> _indexLookup = new Dictionary<int, int>();
         
        static RandomCycle() { ResetPrime(); }

        private static void ResetPrime()
        {
            _prime = _primes[_random.Next(_primes.Length)];
            _indexLookup = new Dictionary<int, int>();
        }

        public static T GetNext<T>(this IEnumerable<T> list) where T : class
        {
            var array = list as T[] ?? list.ToArray();
            var count = array.Count();
            if (count == 0) return null;
            var code = list.GetHashCode();
            var index = _indexLookup.ContainsKey(code) ? _indexLookup[code] : 0;
            index = (index + _prime)%count;
            _indexLookup[code] = index;
            return array[index];
        }

        public static T GetPrevious<T>(this IEnumerable<T> list) where T : class
        {
            var array = list as T[] ?? list.ToArray();
            var count = array.Count();
            if (count == 0) return null;
            var code = list.GetHashCode();
            var index = _indexLookup.ContainsKey(code) ? _indexLookup[code] : 0;
            index = index - _prime;
            while (index < 0) index += count;
            _indexLookup[code] = index;
            return array[index];
        }


    }
}
